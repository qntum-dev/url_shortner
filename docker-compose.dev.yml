services:
  server:
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - ./.env.dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - .:/shortner/
    command: npm run dev

    networks:
      - app-network

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    env_file:
      - ./.env.dev
    volumes:
      - ./postgres/scripts/create.sql:/docker-entrypoint-initdb.d/create.sql
      - ./postgres/scripts/shortner.sql:/docker-entrypoint-initdb.d/shortner.sql
      - ./postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5      
    networks:
      - app-network

  redis:
    build: 
      context: ./redis
      dockerfile: Dockerfile
    env_file:
      - ./.env.dev
    volumes:
      - ./redis/data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "${REDIS_PORT}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge
